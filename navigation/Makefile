# Makefile to automatically compile executable and test binary

### Variable setup

# Get current base directory
MAKEDIR = $(realpath $(firstword $(MAKEFILE_LIST)))
DIRNAME = $(dir $(MAKEDIR:%/=%))

# Get the name of the directory we are in (i.e. guidance, navigation, or control)
# Does not work if the current directory has spaces in the name
BASENAME = $(shell basename $(lastword $(DIRNAME)))

# Source and header directories
MAINDIR = main
SRCDIR = src
INCDIR = inc ../system

# bld and subdirectories
BLDDIR = bld
OBJDIR = $(BLDDIR)/obj
DEPDIR = $(BLDDIR)/dep
BINDIR = $(BLDDIR)/bin

# Locate API (non-main) source files, and corresponding object files
SRCS = $(foreach dir,$(SRCDIR),$(wildcard $(dir)/*.c))
OBJS = $(foreach src,$(notdir $(SRCS)),$(OBJDIR)/$(src:.c=.o))
DEPS = $(foreach src,$(notdir $(SRCS)),$(DEPDIR)/$(src:.c=.d))

# Main sources and binaries
MAINSRC = $(BASENAME)_main.c
MAINBASE = $(basename $(MAINSRC))
MAINOBJ = $(MAINBASE:%=$(OBJDIR)/%.o)
MAINBIN = $(MAINBASE:%=$(BINDIR)/%.elf)
MAINDEP = $(MAINBASE:%=$(DEPDIR)/%.d)

# Test code sources and binaries
TESTSRC = $(BASENAME)_test.c
TESTBASE = $(basename $(TESTSRC))
TESTOBJ = $(TESTBASE:%=$(OBJDIR)/%.o)
TESTBIN = $(TESTBASE:%=$(BINDIR)/%.elf)
TESTDEP = $(TESTBASE:%=$(DEPDIR)/%.d)

# Compiler flags
CC = gcc
CFLAGS = -g -Wall 
LIBS = 
LIBFLAGS = $(foreach lib,$(LIBS),-l$(lib))
INCFLAGS = $(foreach inc,$(INCDIR),-iquote $(inc))
DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.d

# Post-compilation step, ensure thing just created is last modified
POSTCOMPILE = touch $@


# Set up path for source file searching in main/ and src/
SRCPATH = $(MAINDIR: =:):$(SRCDIR: =:)
vpath %.c $(SRCPATH)
vpath %.o $(OBJDIR)

# Useful debug print for make variables
# $(info MAKEDIR ${MAKEDIR} DIRNAME ${DIRNAME} BASENAME ${BASENAME} OBJS ${OBJS} MAINOBJ ${MAINOBJ} TESTOBJ ${TESTOBJ})
# $(info DEPS ${DEPS} ${MAINDEP} ${TESTDEP} DEPFLAGS ${DEPFLAGS})


### Start rules

# Main is the default
.PHONY: main
main: $(MAINBIN)

# Perform unit test (after executing below rules)
# Needs to include the cgreen library, which isn't necessary most of the time
.PHONY: test
test: LIBS += cgreen
test: CFLAGS += -shared -fPIC
# Copy and execute test script
test: $(TESTBIN)
	cp $(TESBIN) .
	./$(notdir TESTBIN)


# Rule for all executable binaries (and directory)
$(BINDIR)/%.elf: $(OBJDIR)/%.o $(OBJS) | $(BINDIR)
	$(CC) $(CFLAGS) $(INCFLAGS) $(LIBFLAGS) $^ -o $@
	@$(POSTCOMPILE)

# Rule for all object files (and directory)
.SECONDARY: $(OBJS) $(MAINOBJ) $(TESTOBJ)
%.o: %.c
$(OBJDIR)/%.o: $(DEPDIR)/%.d
$(OBJDIR)/%.o: %.c | $(OBJDIR) $(DEPDIR)
	$(CC) $(CFLAGS) $(DEPFLAGS) $(INCFLAGS) $(LIBFLAGS) -c $< -o $@
	@$(POSTCOMPILE)

# Rule for all directories when they are needed
$(OBJDIR) $(DEPDIR) $(BINDIR):
	mkdir -p $@

# Remove bld directory and all copied executables
clean:
	rm -rf $(BLDDIR) $(notdir $(MAINBIN)) $(notdir $(TESTBIN))


# Including autogenerated dependencies
$(DEPS):
include $(wildcard $(DEPS)) $(wildcard $(MAINDEP)) $(wildcard $(TESTDEP))



### Below this line are sandbox commands for possible extensions
#    * Auto detecting main source files (now only supports *_main and *_test)
#    * Copying executable files into current directory

# auto detect main files
# MAIN = $(foreach dir,$(MAINDIR),$(wildcard $(dir)/*.c))
# MAINSRCALL = $(wildcard $(MAINDIR)/*.c)
# MAINSRC = $(addprefix $(MAINDIR)/, $(addsuffix .c, $(MAINBASE)))
# MAINBINALL = $(foreach b,$(MAINALL),$(BINDIR)/$(b))
# MAINOBJALL = $(foreach o,$(MAINALL),$(OBJDIR)/$(o).o)
# MAINBINALL = $(addprefix $(BINDIR)/,$(MAINALL))
# MAINOBJALL = $(addprefix $(OBJDIR)/,$(addsuffix .o, $(MAINALL)))

# Copy multiple exe files into current dir
#$(MAINALL): %: $(BINDIR)/%
#	@echo cp $^ $@
# $(MAIN): $(MAINBIN)
# 	cp $^ $@

# Now handled by all object files located in the same place
# $(MAINBIN): $(OBJS) $(MAINOBJ)
# 	$(CC) $(CFLAGS) $(LIBFLAGS) $^ -o $@

# $(TESTBIN): $(OBJS) $(TESTOBJ)


### Old ways of doing things, in case the terse syntax stops working
#MAINOBJ = $(addprefix $(OBJDIR)/, $(addsuffix .o, $(MAINBASE)))
#MAINBIN = $(addprefix $(BINDIR)/, $(addsuffix .elf, $(MAINBASE)))
#TESTOBJ = $(addprefix $(OBJDIR)/, $(addsuffix .o, $(TESTBASE)))
#TESTBIN = $(addprefix $(BINDIR)/, $(addsuffix .elf, $(TESTBASE)))
